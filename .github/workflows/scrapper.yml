name: scrapper
on:
  push:
    branches:
      - main
      - hw8
    paths-ignore:
      - 'project/bot/**'
      - '**/bot.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup jdk
        uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: 'temurin'
          cache: maven
      - name: build with maven
        run: |
          cd project
          mvn package -pl scrapper -am
      - name: build docker image
        run: docker build -f scrapper.Dockerfile -t scrapper .
      - name: log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_DOCKER_PAT }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}/scrapper
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: scrapper.Dockerfile
  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          cd project
          mvn -pl scrapper -am checkstyle:check
  start:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: docker compose -f ./project/scrapper/src/main/resources/docker-compose.yml up -d
      - name: log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_DOCKER_PAT }}
      - run: docker pull ghcr.io/polina2/tinkoff-java-course-2023/scrapper:hw8
      - name: Authenticate and deploy to Kubernetes
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: kubectl apply -f deployment-scrapper.yml
